<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btc123.app.mapper.AppVersionMapper">
    <resultMap id="BaseResultMap" type="com.btc123.app.entity.AppVersion">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="new_version" property="newVersion" jdbcType="BIGINT"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="download_url" property="downloadUrl" jdbcType="VARCHAR"/>
        <result column="device_type" property="deviceType" jdbcType="VARCHAR"/>
        <result column="sys_user_id" property="sysUserId" jdbcType="BIGINT"/>
        <result column="update_type" property="updateType" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, gmt_create, new_version, content, download_url, device_type, sys_user_id, update_type
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from btc123_app_version
        where id = #{id,jdbcType=BIGINT}
    </select>
    <!-- 查询当前app最大的版本-->
    <select id="selectMaxVersion" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from btc123_app_version b where b.new_version > #{version}
        and b.device_type=#{deviceType} order by b.new_version desc limit 0,1;
    </select>
    <!-- 查询当前版本和最大版本是否有需要强制更新的版本 -->
    <select id="selectBetweenVersionCount" resultMap="BaseResultMap">
        select
            count(id)
        from btc123_app_version b where
        (b.new_version between #{version} and #{maxVersion}) and b.device_type=#{deviceType} and b.update_type=1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from btc123_app_version
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.btc123.app.entity.AppVersion">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into btc123_app_version (gmt_create, new_version, content,
        download_url, device_type, sys_user_id,
        update_type)
        values (#{gmtCreate,jdbcType=TIMESTAMP}, #{newVersion,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR},
        #{downloadUrl,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, #{sysUserId,jdbcType=BIGINT},
        #{updateType,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.btc123.app.entity.AppVersion">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into btc123_app_version
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="newVersion != null">
                new_version,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="downloadUrl != null">
                download_url,
            </if>
            <if test="deviceType != null">
                device_type,
            </if>
            <if test="sysUserId != null">
                sys_user_id,
            </if>
            <if test="updateType != null">
                update_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="newVersion != null">
                #{newVersion,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="downloadUrl != null">
                #{downloadUrl,jdbcType=VARCHAR},
            </if>
            <if test="deviceType != null">
                #{deviceType,jdbcType=VARCHAR},
            </if>
            <if test="sysUserId != null">
                #{sysUserId,jdbcType=BIGINT},
            </if>
            <if test="updateType != null">
                #{updateType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.btc123.app.entity.AppVersion">
        update btc123_app_version
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="newVersion != null">
                new_version = #{newVersion,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="downloadUrl != null">
                download_url = #{downloadUrl,jdbcType=VARCHAR},
            </if>
            <if test="deviceType != null">
                device_type = #{deviceType,jdbcType=VARCHAR},
            </if>
            <if test="sysUserId != null">
                sys_user_id = #{sysUserId,jdbcType=BIGINT},
            </if>
            <if test="updateType != null">
                update_type = #{updateType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.btc123.app.entity.AppVersion">
    update btc123_app_version
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      new_version = #{newVersion,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=VARCHAR},
      sys_user_id = #{sysUserId,jdbcType=BIGINT},
      update_type = #{updateType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>