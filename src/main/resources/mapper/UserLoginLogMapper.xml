<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btc123.app.mapper.UserLoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.btc123.app.entity.UserLoginLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="device_type" property="deviceType" jdbcType="INTEGER" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="login_type" property="loginType" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_time, user_id, device_type, device_id, login_type, ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from btc123_user_login_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from btc123_user_login_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.btc123.app.entity.UserLoginLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into btc123_user_login_log (login_time, user_id, device_type, 
      device_id, login_type, ip
      )
    values (#{loginTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, #{deviceType,jdbcType=INTEGER}, 
      #{deviceId,jdbcType=VARCHAR}, #{loginType,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.btc123.app.entity.UserLoginLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into btc123_user_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="loginType != null" >
        login_type,
      </if>
      <if test="ip != null" >
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        #{loginType,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.btc123.app.entity.UserLoginLog" >
    update btc123_user_login_log
    <set >
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        login_type = #{loginType,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.btc123.app.entity.UserLoginLog" >
    update btc123_user_login_log
    set login_time = #{loginTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      device_type = #{deviceType,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>