<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btc123.app.mapper.ArticleLikeMapper" >
  <resultMap id="BaseResultMap" type="com.btc123.app.entity.ArticleLike" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, gmt_create, gmt_modified, user_id, article_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from btc123_article_like
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from btc123_article_like
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.btc123.app.entity.ArticleLike" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into btc123_article_like (gmt_create, gmt_modified, user_id, 
      article_id)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, 
      #{articleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.btc123.app.entity.ArticleLike" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into btc123_article_like
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.btc123.app.entity.ArticleLike" >
    update btc123_article_like
    <set >
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.btc123.app.entity.ArticleLike" >
    update btc123_article_like
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryByUserIdAndArticle" resultMap="BaseResultMap" parameterType="com.btc123.app.entity.ArticleLike" >
    select
    <include refid="Base_Column_List" />
    from btc123_article_like
    where user_id = #{userId,jdbcType=BIGINT} and article_id = #{articleId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByUserIdAndArticleId" parameterType="com.btc123.app.entity.ArticleLike" >
    delete from btc123_article_like
     where user_id = #{userId,jdbcType=BIGINT} and article_id = #{articleId,jdbcType=BIGINT}
  </delete>
</mapper>